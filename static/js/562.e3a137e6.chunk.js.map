{"version":3,"file":"static/js/562.e3a137e6.chunk.js","mappings":"mSAEaA,EAAOC,EAAAA,GAAAA,KAAH,gHAOJC,EAAQD,EAAAA,GAAAA,MAAH,iFAMLE,EAASF,EAAAA,GAAAA,OAAH,wmBAyBNG,EAAaH,EAAAA,GAAAA,GAAH,sF,kBChCVI,EAAa,WACxB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAkC/B,OAzBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAmBL,OApBc,mCAmBdG,GACO,WACLP,GAAS,EACV,EAtBa,wCAId,oGAEIF,GAAU,GAFd,SAGsBU,EAAAA,EAAAA,OAAgBJ,GAHtC,QAGUK,EAHV,QAKYC,KAAKC,SAAW,GACtBX,GAAS,GAEXJ,EAAaa,EAAIC,KAAKC,SAR1B,gDAUIX,GAAS,GAVb,yBAYIF,GAAU,GAZd,6EAJc,sBAuBf,GAAE,CAACM,KAGF,iCACE,UAAChB,EAAD,CAAMwB,UAAU,OAAOC,SAlCN,SAAAC,GACnBA,EAAEC,iBACF,IAAMX,EAAQU,EAAEE,cAAcZ,MAAMa,MACpCd,EAA0B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAC5CU,EAAEE,cAAcE,OACjB,EA6BG,WACE,SAAC3B,EAAD,CAAQ4B,KAAK,SAAb,UACE,wCAGF,SAAC7B,EAAD,CACEsB,UAAU,QACVQ,KAAK,QACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,qBAGf1B,IAAU,SAAC2B,EAAA,EAAD,IACVzB,GACC,SAAC0B,EAAA,EAAD,KAEA,SAACjC,EAAD,UACGG,IAAa,SAAC+B,EAAA,EAAD,CAAYC,OAAQhC,QAK3C,E,SCxEYiC,EAAgBvC,EAAAA,GAAAA,QAAH,4MCc1B,EAXe,WACb,OACE,UAACuC,EAAD,YACE,SAACnC,EAAD,KACA,SAAC,EAAAoC,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["components/FilmSearch/FilmSearch.styled.js","components/FilmSearch/FilmSearch.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 40px;\n  padding-left: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-right: 10px;\n  background-color: lightblue;\n  color: black;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.6;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 32px;\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: darkblue;\n    color: white;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const SearchList = styled.ul`\n  list-style: none;\n  padding: 20px;\n  text-align: center;\n`;\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getMovie } from 'Healpers/apiService';\nimport { Loader } from 'Healpers/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, Button, SearchList } from './FilmSearch.styled';\nimport { DefaultImg } from 'DefaultImg/DefaultImg';\n\nexport const FilmSearch = () => {\n  const [searchRes, setSearchRes] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const HandleSubmit = e => {\n    e.preventDefault();\n    const query = e.currentTarget.query.value;\n    setSearchParams(query !== '' ? { query } : {});\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getRes() {\n      try {\n        setLoader(true);\n        const res = await getMovie.search(query);\n\n        if (res.data.results <= 0) {\n          setError(true);\n        }\n        setSearchRes(res.data.results);\n      } catch {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    }\n    getRes();\n    return () => {\n      setError(false);\n    };\n  }, [query]);\n\n  return (\n    <>\n      <Form className=\"form\" onSubmit={HandleSubmit}>\n        <Button type=\"submit\">\n          <span>Search</span>\n        </Button>\n\n        <Input\n          className=\"input\"\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Movies\"\n        />\n      </Form>\n      {loader && <Loader />}\n      {error ? (\n        <DefaultImg />\n      ) : (\n        <SearchList>\n          {searchRes && <MoviesList movies={searchRes} />}\n        </SearchList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesSection = styled.section`\n  background: linear-gradient(\n    90deg,\n    rgba(181, 182, 196, 1) 1%,\n    rgba(204, 208, 209, 1) 7%,\n    rgba(237, 237, 241, 0.975249474789916) 98%\n  );\n  height: 100vh;\n`;\n","import { FilmSearch } from 'components/FilmSearch/FilmSearch';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { MoviesSection } from './Movies.styled';\n\nconst Movies = () => {\n  return (\n    <MoviesSection>\n      <FilmSearch />\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </MoviesSection>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","Input","Button","SearchList","FilmSearch","useState","searchRes","setSearchRes","loader","setLoader","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getRes","getMovie","res","data","results","className","onSubmit","e","preventDefault","currentTarget","value","reset","type","name","autoComplete","autoFocus","placeholder","Loader","DefaultImg","MoviesList","movies","MoviesSection","Suspense"],"sourceRoot":""}